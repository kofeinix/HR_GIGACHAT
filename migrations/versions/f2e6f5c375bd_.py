"""empty message

Revision ID: f2e6f5c375bd
Revises: 
Create Date: 2024-04-14 20:33:43.100864

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f2e6f5c375bd'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Metric',
    sa.Column('metric_id', sa.CHAR(length=32), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('mood', sa.String(), nullable=True),
    sa.Column('summarization', sa.String(), nullable=True),
    sa.Column('characteristic', sa.String(), nullable=True),
    sa.Column('recommendation', sa.String(), nullable=True),
    sa.Column('created_ts', sa.DateTime(), nullable=True),
    sa.Column('updated_ts', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('metric_id')
    )
    op.create_table('QA',
    sa.Column('question_id', sa.CHAR(length=32), nullable=False),
    sa.Column('question', sa.String(), nullable=False),
    sa.Column('answer', sa.String(), nullable=False),
    sa.Column('topic', sa.String(), nullable=False),
    sa.Column('level', sa.String(), nullable=False),
    sa.Column('created_ts', sa.DateTime(), nullable=True),
    sa.Column('updated_ts', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('question_id')
    )
    op.create_table('User',
    sa.Column('user_id', sa.CHAR(length=32), nullable=False),
    sa.Column('user_name', sa.String(), nullable=True),
    sa.Column('resume', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('Vacancy',
    sa.Column('vacancy_id', sa.CHAR(length=32), nullable=False),
    sa.Column('vacancy_description', sa.String(), nullable=False),
    sa.Column('attributes', sa.String(), nullable=False),
    sa.Column('level', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('vacancy_id')
    )
    op.create_table('User_x_Vacancy',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('vacancy_id', sa.Integer(), nullable=False),
    sa.Column('metric_id', sa.Integer(), nullable=True),
    sa.Column('is_allowed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['metric_id'], ['Metric.metric_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ),
    sa.ForeignKeyConstraint(['vacancy_id'], ['Vacancy.vacancy_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'vacancy_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('User_x_Vacancy')
    op.drop_table('Vacancy')
    op.drop_table('User')
    op.drop_table('QA')
    op.drop_table('Metric')
    # ### end Alembic commands ###
